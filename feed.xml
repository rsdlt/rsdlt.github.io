<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://rsdlt.github.io/</id><title>the trait</title><subtitle>My personal blog where I share my projects and ideas about the technology topics I'm passionate about.</subtitle> <updated>2023-07-06T19:11:23-04:00</updated> <author> <name>Rodrigo Santiago</name> <uri>https://rsdlt.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://rsdlt.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://rsdlt.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator> <rights> © 2023 Rodrigo Santiago </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Building a Real-Time Web Cipher with Rust, Sycamore and Trunk</title><link href="https://rsdlt.github.io/posts/rust-sycamore-trunk-wasm-iterators-vigenere-cipher/" rel="alternate" type="text/html" title="Building a Real-Time Web Cipher with Rust, Sycamore and Trunk" /><published>2022-09-27T13:00:00-04:00</published> <updated>2022-10-03T11:04:09-04:00</updated> <id>https://rsdlt.github.io/posts/rust-sycamore-trunk-wasm-iterators-vigenere-cipher/</id> <content src="https://rsdlt.github.io/posts/rust-sycamore-trunk-wasm-iterators-vigenere-cipher/" /> <author> <name>rsdlt</name> </author> <category term="Rust" /> <category term="Wasm" /> <summary> Check the demo and the GitHub repo. Edit: Since the original post some readers brought to my attention a bug that yielded incorrect decoding. This is now fixed in release v0.1.2. Thanks to Martin Kavík and others for letting me know. I also added support to properly display multiple continuous space and new line chars in the decoded text in v0.1.3. You can check the details in the updat... </summary> </entry> <entry><title>Implementing the Display Trait on a Generic Array using Newtype Pattern</title><link href="https://rsdlt.github.io/posts/rust-use-newtype-pattern-display-trait-array-generics/" rel="alternate" type="text/html" title="Implementing the Display Trait on a Generic Array using Newtype Pattern" /><published>2022-09-17T06:15:00-04:00</published> <updated>2022-09-27T09:41:22-04:00</updated> <id>https://rsdlt.github.io/posts/rust-use-newtype-pattern-display-trait-array-generics/</id> <content src="https://rsdlt.github.io/posts/rust-use-newtype-pattern-display-trait-array-generics/" /> <author> <name>rsdlt</name> </author> <category term="Rust" /> <category term="Traits" /> <summary> Edit: In the original post I said that the PartialEq trait bound was required in the generic Display function implementation; however, if the last element of the array is the same as its predecessor then the function will not print properly. Thanks to korrat for letting me know and for the recommendation to use std::ptr::eq instead. Probably one of the first things that someone does when l... </summary> </entry> <entry><title>How to Use Rust Traits, Generics and Bounds</title><link href="https://rsdlt.github.io/posts/rust-trait-super-generic-polymorphism-subtrait-supertrait-bounds/" rel="alternate" type="text/html" title="How to Use Rust Traits, Generics and Bounds" /><published>2022-09-06T09:30:00-04:00</published> <updated>2022-09-06T09:30:00-04:00</updated> <id>https://rsdlt.github.io/posts/rust-trait-super-generic-polymorphism-subtrait-supertrait-bounds/</id> <content src="https://rsdlt.github.io/posts/rust-trait-super-generic-polymorphism-subtrait-supertrait-bounds/" /> <author> <name>rsdlt</name> </author> <category term="Rust" /> <category term="Traits" /> <summary> Every time I am developing the question I am always asking myself is “is this code idiomatic, ergonomic and extendable enough?” I ask myself that question much more at the beginning, when all the scaffolding and critical building blocks are being created, and particularly when defining types that will be the workhorses of the entire project. Because I know that if I don’t do it correctly ther... </summary> </entry> <entry><title>Ruxel - Building a Ray Tracer with Rust Part 1</title><link href="https://rsdlt.github.io/posts/ruxel-part-1-rust-ray-tracer-renderer-3d-development/" rel="alternate" type="text/html" title="Ruxel - Building a Ray Tracer with Rust Part 1" /><published>2022-08-24T10:20:00-04:00</published> <updated>2022-08-24T22:40:36-04:00</updated> <id>https://rsdlt.github.io/posts/ruxel-part-1-rust-ray-tracer-renderer-3d-development/</id> <content src="https://rsdlt.github.io/posts/ruxel-part-1-rust-ray-tracer-renderer-3d-development/" /> <author> <name>rsdlt</name> </author> <category term="Rust" /> <category term="Ray Tracer" /> <summary> This post is Part 1 in a series to share my journey in developing Ruxel, a simple Ray Tracer and 3D Renderer written in Rust, from scratch. Please see the Series Prelude for more information regarding my Goals for v.0.1.0 of this project. Ideally by the end of the series, Ruxel will be able to render an image like the one in the header, or better… Note: Explaining 3D math in depth isn’t t... </summary> </entry> <entry><title>Rust and Neovim - A Thorough Guide and Walkthrough</title><link href="https://rsdlt.github.io/posts/rust-nvim-ide-guide-walkthrough-development-debug/" rel="alternate" type="text/html" title="Rust and Neovim - A Thorough Guide and Walkthrough" /><published>2022-08-15T05:45:00-04:00</published> <updated>2023-03-11T14:11:04-05:00</updated> <id>https://rsdlt.github.io/posts/rust-nvim-ide-guide-walkthrough-development-debug/</id> <content src="https://rsdlt.github.io/posts/rust-nvim-ide-guide-walkthrough-development-debug/" /> <author> <name>rsdlt</name> </author> <category term="Rust" /> <category term="Neovim" /> <summary> Edit: Some readers mentioned an issue with the example Lua code used to configure the simrat39/rust-tools.nvim plugin; that configuration code has been updated with the example configuration recommended in the plugin page as of the date of this edit. Thanks to Nazar Toakarak for letting me know. Readers have also asked me about the link to my latest Neovim config files, you can find them her... </summary> </entry> </feed>
